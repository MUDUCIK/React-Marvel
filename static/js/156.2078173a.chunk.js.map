{"version":3,"file":"static/js/156.2078173a.chunk.js","mappings":"sLAkCA,IA/BA,SAAyB,GAAyB,IAAvBA,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAQC,GAAK,YAC3C,GAA4BC,EAAAA,EAAAA,WAAS,GAAM,eAApCC,EAAM,KAAEC,EAAS,KAExB,OACE,iCACID,IACA,gBACEE,UAAU,QACVC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,cAIvB,kCACMR,GAAK,IACTF,IAAKA,EACLC,IAAQ,OAAHA,QAAG,IAAHA,EAAAA,EAAO,GACZM,MAAOH,EAAS,CAAC,EAAI,CAAEO,QAAS,QAChCC,OAAQ,kBAAMP,GAAU,EAAK,OAIrC,C,wLCxBaQ,EAAgBC,EAAAA,GAAAA,IAAU,i6BAqC5BC,EAAAA,GAAAA,QCrCEC,EAAQF,EAAAA,GAAAA,IAAU,43BA6BhB,YAAQ,SAALG,MAAkBC,OAAOC,YAAY,GAW5CJ,EAAAA,GAAAA,QAUI,YAAQ,SAALE,MAAkBC,OAAOE,aAAa,IAC9B,YAAQ,SAALH,MAAkBC,OAAOG,YAAY,IAGjD,YAAQ,SAALJ,MAAkBC,OAAOE,aAAa,I,mBCJ1D,SAASE,EAAK,GAAmC,IAAjCC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAS,EAATA,UACjC,OACE,iCACE,gBAAKnB,UAAU,gBAAe,UAC5B,SAACoB,EAAA,EAAe,CAACpB,UAAU,QAAQN,IAAKyB,EAAWxB,IAAKsB,OAE1D,iBAAKjB,UAAU,cAAa,WAC1B,eAAIA,UAAU,QAAO,SAAEiB,KACvB,cAAGjB,UAAU,QAAO,SAAEkB,SAI9B,CAEA,MAxDA,WACE,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAyCE,EAAAA,EAAAA,KAAjCC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aACxB,GAA0C7B,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAA/C8B,EAAa,KAAEC,EAAgB,KACtC,GAAwC/B,EAAAA,EAAAA,WAAS,GAAK,eAA/CgC,EAAY,KAAEC,EAAe,MAEpCC,EAAAA,EAAAA,YAAU,WACRL,EAAaL,GAAIW,MAAK,SAACL,GAAa,OAAKC,EAAiBD,EAAc,IACxEG,GAAgB,EAClB,GAAG,IAEH,IAAMG,EAAYR,IAChB,gBAAKzB,UAAU,UAAS,UACtB,SAAC,KAAO,MAGNkC,GAAWT,IAAYI,IAAiBL,IAAS,SAACR,GAAI,UAAKW,IAC3DQ,EAAgBX,IAAS,SAAC,KAAY,IAE5C,OACE,UAAC,KAAa,YACZ,UAACY,EAAA,EAAM,YACL,2BAAQT,EAAcV,QACtB,iBAAMA,KAAK,cAAciB,QAASP,EAAcT,kBAElD,UAACR,EAAK,YACJ,SAAC,KAAS,KACV,iBAAKV,UAAU,UAAS,WACtB,UAACO,EAAa,WACX0B,EACAC,EACAC,MAEH,SAAC,KAAI,CAACE,GAAG,cAAcrC,UAAU,cAAa,SAAC,wBAOzD,C","sources":["components/elements/ImageWithLoader/ImageWithLoader.jsx","pages/AboutCharacter/CharacterInfo.js","pages/AboutCharacter/Style.js","pages/AboutCharacter/AboutCharacter.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ImageWithLoader({ src, alt, ...props }) {\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      {!loaded && (\r\n        <div\r\n          className='pulse'\r\n          style={{\r\n            height: '100%',\r\n            width: '100%',\r\n            backgroundColor: '#C4C4C4',\r\n          }}\r\n        />\r\n      )}\r\n      <img\r\n        {...props}\r\n        src={src}\r\n        alt={alt ?? ''}\r\n        style={loaded ? {} : { display: 'none' }}\r\n        onLoad={() => setLoaded(true)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nImageWithLoader.propTypes = {\r\n  src: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([undefined]).isRequired]),\r\n  alt: PropTypes.string,\r\n}\r\n\r\nexport default ImageWithLoader\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/styled-components'\r\n\r\nexport const CharacterInfo = styled.div`\r\n  display: flex;\r\n  min-width: 550px;\r\n  min-height: 440px;\r\n\r\n  .image {\r\n    height: 100%;\r\n    width: 293px;\r\n    object-fit: contain;\r\n\r\n    margin-bottom: auto;\r\n\r\n    user-select: none;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .description {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5625rem 0.625rem;\r\n\r\n    max-width: 550px;\r\n\r\n    margin-left: 3.125rem;\r\n\r\n    font-size: 1.125rem;\r\n  }\r\n\r\n  .title {\r\n    font-weight: 700;\r\n    font-size: 1.375rem;\r\n  }\r\n\r\n  .about {\r\n    line-height: 1.5625rem;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n\r\n    min-width: auto;\r\n\r\n    .description {\r\n      align-items: center;\r\n      margin-left: 0;\r\n      margin-bottom: auto;\r\n      text-align: center;\r\n    }\r\n\r\n    .image {\r\n      width: 100%;\r\n      max-width: 300px;\r\n\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/styled-components'\r\n\r\nexport const Style = styled.div`\r\n  padding-bottom: 3.125rem;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n\r\n    margin-top: 3.125rem;\r\n  }\r\n\r\n  .image-wrapper {\r\n    height: 308px;\r\n    width: 300px;\r\n\r\n    object-fit: cover;\r\n  }\r\n\r\n  .back-to-all {\r\n    min-width: 96px;\r\n\r\n    padding: 0 0 10px 20px;\r\n\r\n    font-weight: 700;\r\n    font-size: 1.125rem;\r\n\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.mainHoverRed};\r\n    }\r\n  }\r\n\r\n  .spinner {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    .wrapper {\r\n      flex-direction: column-reverse;\r\n      align-items: center;\r\n      gap: 30px;\r\n    }\r\n\r\n    .back-to-all {\r\n      padding: 10px 20px;\r\n\r\n      color: ${({ theme }) => theme.colors.mainTextWhite};\r\n      background-color: ${({ theme }) => theme.colors.mainRedColor};\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.mainTextWhite};\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport { useMarvelService } from '../../services/MarvelService'\r\n\r\nimport { ErrorBoundary, ErrorMessage, NewsBoard, Spinner } from '../../components/elements'\r\nimport { CharacterInfo } from './CharacterInfo'\r\nimport { Style } from './Style'\r\nimport ImageWithLoader from '../../components/elements/ImageWithLoader/ImageWithLoader'\r\n\r\nfunction AboutComics() {\r\n  const { id } = useParams()\r\n  const { error, loading, getCharacter } = useMarvelService()\r\n  const [characterData, setCharacterData] = useState({})\r\n  const [firstLoading, setFirstLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getCharacter(id).then((characterData) => setCharacterData(characterData))\r\n    setFirstLoading(false)\r\n  }, [])\r\n\r\n  const onLoading = loading && (\r\n    <div className='spinner'>\r\n      <Spinner />\r\n    </div>\r\n  )\r\n  const content = !loading && !firstLoading && !error && <View {...characterData} />\r\n  const errorOccurred = error && <ErrorMessage />\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Helmet>\r\n        <title>{characterData.name}</title>\r\n        <meta name='description' content={characterData.description} />\r\n      </Helmet>\r\n      <Style>\r\n        <NewsBoard />\r\n        <div className='wrapper'>\r\n          <CharacterInfo>\r\n            {onLoading}\r\n            {content}\r\n            {errorOccurred}\r\n          </CharacterInfo>\r\n          <Link to='/characters' className='back-to-all'>\r\n            Back to all\r\n          </Link>\r\n        </div>\r\n      </Style>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nfunction View({ name, description, thumbnail }) {\r\n  return (\r\n    <>\r\n      <div className='image-wrapper'>\r\n        <ImageWithLoader className='image' src={thumbnail} alt={name} />\r\n      </div>\r\n      <div className='description'>\r\n        <h4 className='title'>{name}</h4>\r\n        <p className='about'>{description}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AboutComics\r\n"],"names":["src","alt","props","useState","loaded","setLoaded","className","style","height","width","backgroundColor","display","onLoad","CharacterInfo","styled","device","Style","theme","colors","mainHoverRed","mainTextWhite","mainRedColor","View","name","description","thumbnail","ImageWithLoader","id","useParams","useMarvelService","error","loading","getCharacter","characterData","setCharacterData","firstLoading","setFirstLoading","useEffect","then","onLoading","content","errorOccurred","Helmet","to"],"sourceRoot":""}