{"version":3,"file":"static/js/922.d9d079ff.chunk.js","mappings":"sLAkCA,IA/BA,SAAyB,GAAyB,IAAvBA,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAQC,GAAK,YAC3C,GAA4BC,EAAAA,EAAAA,WAAS,GAAM,eAApCC,EAAM,KAAEC,EAAS,KAExB,OACE,iCACID,IACA,gBACEE,UAAU,QACVC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,gBAAiB,cAIvB,kCACMR,GAAK,IACTF,IAAKA,EACLC,IAAQ,OAAHA,QAAG,IAAHA,EAAAA,EAAO,GACZM,MAAOH,EAAS,CAAC,EAAI,CAAEO,QAAS,QAChCC,OAAQ,kBAAMP,GAAU,EAAK,OAIrC,C,wLCxBaQ,EAAQC,EAAAA,GAAAA,IAAU,w/BA2BhB,YAAQ,SAALC,MAAkBC,OAAOC,YAAY,GAW5CC,EAAAA,EAAAA,QAoBI,YAAQ,SAALH,MAAkBC,OAAOG,aAAa,IAC9B,YAAQ,SAALJ,MAAkBC,OAAOI,YAAY,IAGjD,YAAQ,SAALL,MAAkBC,OAAOG,aAAa,I,UC9D7CE,EAAaP,EAAAA,GAAAA,IAAU,w+BA8CvB,YAAQ,SAALC,MAAkBC,OAAOI,YAAY,GAG1CF,EAAAA,GAAAA,Q,mBCCX,SAASI,EAAK,GAA4D,IAA1DC,EAAK,EAALA,MAAOC,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAC3D,OACE,iCACE,gBAAKtB,UAAU,gBAAe,UAC5B,SAACuB,EAAA,EAAe,CAACvB,UAAU,QAAQN,IAAKyB,EAAOxB,IAAKsB,OAEtD,iBAAKjB,UAAU,cAAa,WAC1B,eAAIA,UAAU,QAAO,SAAEiB,KACvB,cAAGjB,UAAU,QAAO,SAAEkB,KACtB,kBAAMlB,UAAU,QAAO,UAAEqB,EAAU,aACnC,kBAAMrB,UAAU,WAAU,UAAC,aAAWsB,MACtC,iBAAMtB,UAAU,QAAO,SAAEoB,SAIjC,CAEA,MA3DA,WACE,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAsCE,EAAAA,EAAAA,KAA9BC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAS,EAATA,UACxB,GAAoChC,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAzCiC,EAAU,KAAEC,EAAa,KAChC,GAAwClC,EAAAA,EAAAA,WAAS,GAAK,eAA/CmC,EAAY,KAAEC,EAAe,MAEpCC,EAAAA,EAAAA,YAAU,WACRL,EAAUL,GAAIW,MAAK,SAACL,GAAU,OAAKC,EAAcD,EAAW,IAC5DG,GAAgB,EAClB,GAAG,IAEH,IAAMG,EAAYR,IAChB,gBAAK5B,UAAU,UAAS,UACtB,SAAC,KAAO,MAGNqC,GAAWT,IAAYI,IAAiBL,IAAS,SAACX,GAAI,UAAKc,IAC3DQ,EAAgBX,IAAS,SAAC,KAAY,IAE5C,OACE,UAAC,KAAa,YACZ,UAACY,EAAA,EAAM,YACL,2BAAQT,EAAWb,SACnB,iBAAMuB,KAAK,cAAcH,QAASP,EAAWZ,kBAE/C,UAACX,EAAK,YACJ,SAAC,KAAS,KACV,iBAAKP,UAAU,UAAS,WACtB,UAACe,EAAU,WACRqB,EACAC,EACAC,MAEH,SAAC,KAAI,CAACG,GAAG,UAAUzC,UAAU,cAAa,SAAC,wBAOrD,C","sources":["components/elements/ImageWithLoader/ImageWithLoader.jsx","pages/AboutComics/Style.js","pages/AboutComics/ComicsInfo.js","pages/AboutComics/AboutComics.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ImageWithLoader({ src, alt, ...props }) {\r\n  const [loaded, setLoaded] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      {!loaded && (\r\n        <div\r\n          className='pulse'\r\n          style={{\r\n            height: '100%',\r\n            width: '100%',\r\n            backgroundColor: '#C4C4C4',\r\n          }}\r\n        />\r\n      )}\r\n      <img\r\n        {...props}\r\n        src={src}\r\n        alt={alt ?? ''}\r\n        style={loaded ? {} : { display: 'none' }}\r\n        onLoad={() => setLoaded(true)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nImageWithLoader.propTypes = {\r\n  src: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.oneOf([undefined]).isRequired]),\r\n  alt: PropTypes.string,\r\n}\r\n\r\nexport default ImageWithLoader\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/styled-components/queries'\r\n\r\nexport const Style = styled.div`\r\n  padding-bottom: 3.125rem;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n\r\n    margin-top: 3.125rem;\r\n  }\r\n\r\n  .image-wrapper {\r\n    height: 450px;\r\n    width: 293px;\r\n  }\r\n\r\n  .back-to-all {\r\n    min-width: 96px;\r\n\r\n    padding: 0 0 10px 20px;\r\n\r\n    font-weight: 700;\r\n    font-size: 1.125rem;\r\n\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.colors.mainHoverRed};\r\n    }\r\n  }\r\n\r\n  .spinner {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    .wrapper {\r\n      flex-direction: column-reverse;\r\n      align-items: center;\r\n      gap: 30px;\r\n    }\r\n\r\n    .image-wrapper {\r\n      min-height: 450px;\r\n      height: auto;\r\n      width: auto;\r\n\r\n      img {\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    .back-to-all {\r\n      padding: 10px 20px;\r\n\r\n      color: ${({ theme }) => theme.colors.mainTextWhite};\r\n      background-color: ${({ theme }) => theme.colors.mainRedColor};\r\n\r\n      &:hover {\r\n        color: ${({ theme }) => theme.colors.mainTextWhite};\r\n      }\r\n    }\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { device } from '../../styles/styled-components'\r\n\r\nexport const ComicsInfo = styled.div`\r\n  display: flex;\r\n  min-width: 550px;\r\n  min-height: 440px;\r\n\r\n  .image {\r\n    height: 450px;\r\n    width: 293px;\r\n    object-fit: contain;\r\n\r\n    margin-bottom: auto;\r\n\r\n    user-select: none;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .description {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1.5625rem 0.625rem;\r\n\r\n    max-width: 550px;\r\n\r\n    margin-left: 3.125rem;\r\n\r\n    font-size: 1.125rem;\r\n  }\r\n\r\n  .title {\r\n    font-weight: 700;\r\n    font-size: 1.375rem;\r\n  }\r\n\r\n  .about {\r\n    line-height: 1.5625rem;\r\n  }\r\n\r\n  .pages {\r\n  }\r\n\r\n  .language {\r\n  }\r\n\r\n  .price {\r\n    font-weight: 700;\r\n    font-size: 1.5rem;\r\n    color: ${({ theme }) => theme.colors.mainRedColor};\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 30px;\r\n\r\n    min-width: auto;\r\n\r\n    .description {\r\n      align-items: center;\r\n      margin-left: 0;\r\n      text-align: center;\r\n    }\r\n\r\n    .image {\r\n      width: 100%;\r\n      max-width: 300px;\r\n    }\r\n  }\r\n`\r\n","import { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport { useMarvelService } from '../../services/MarvelService'\r\n\r\nimport { ErrorBoundary, ErrorMessage, NewsBoard, Spinner } from '../../components/elements'\r\nimport { Style } from './Style'\r\nimport { ComicsInfo } from './ComicsInfo'\r\nimport ImageWithLoader from '../../components/elements/ImageWithLoader/ImageWithLoader'\r\n\r\nfunction AboutComics() {\r\n  const { id } = useParams()\r\n  const { error, loading, getComics } = useMarvelService()\r\n  const [comicsData, setComicsData] = useState({})\r\n  const [firstLoading, setFirstLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    getComics(id).then((comicsData) => setComicsData(comicsData))\r\n    setFirstLoading(false)\r\n  }, [])\r\n\r\n  const onLoading = loading && (\r\n    <div className='spinner'>\r\n      <Spinner />\r\n    </div>\r\n  )\r\n  const content = !loading && !firstLoading && !error && <View {...comicsData} />\r\n  const errorOccurred = error && <ErrorMessage />\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Helmet>\r\n        <title>{comicsData.title}</title>\r\n        <meta name='description' content={comicsData.description} />\r\n      </Helmet>\r\n      <Style>\r\n        <NewsBoard />\r\n        <div className='wrapper'>\r\n          <ComicsInfo>\r\n            {onLoading}\r\n            {content}\r\n            {errorOccurred}\r\n          </ComicsInfo>\r\n          <Link to='/comics' className='back-to-all'>\r\n            Back to all\r\n          </Link>\r\n        </div>\r\n      </Style>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nfunction View({ title, description, image, price, pageCount, language }) {\r\n  return (\r\n    <>\r\n      <div className='image-wrapper'>\r\n        <ImageWithLoader className='image' src={image} alt={title} />\r\n      </div>\r\n      <div className='description'>\r\n        <h4 className='title'>{title}</h4>\r\n        <p className='about'>{description}</p>\r\n        <span className='pages'>{pageCount} pages</span>\r\n        <span className='language'>Language: {language}</span>\r\n        <span className='price'>{price}</span>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AboutComics\r\n"],"names":["src","alt","props","useState","loaded","setLoaded","className","style","height","width","backgroundColor","display","onLoad","Style","styled","theme","colors","mainHoverRed","device","mainTextWhite","mainRedColor","ComicsInfo","View","title","description","image","price","pageCount","language","ImageWithLoader","id","useParams","useMarvelService","error","loading","getComics","comicsData","setComicsData","firstLoading","setFirstLoading","useEffect","then","onLoading","content","errorOccurred","Helmet","name","to"],"sourceRoot":""}